name: Make Leonardo PR

on:
  workflow_dispatch:

jobs:
  make-leonardo-pr:
    name: Create Leonardo PR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the cromwhelm repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.BROADBOT_TOKEN }} # Has to be set at checkout AND later when pushing to work

      - name: Find out next chart version from cromwhelm repository
        run: |
          currentVersionGCP=$(grep '^version:' cromwell-helm/Chart.yaml | awk '{print $NF}')
          currentVersionCOA=$(grep '^version:' coa-helm/Chart.yaml | awk '{print $NF}')

          # this will increment only the patch version digit. For example, it will update 0.1.10 => 0.1.11
          nextVersionGCP=$(echo ${currentVersionGCP} | awk -F. -v OFS=. '{$NF += 1 ; print}')
          nextVersionCOA=$(echo ${currentVersionGCP} | awk -F. -v OFS=. '{$NF += 1 ; print}')

          if [ $currentVersionCOA != $currentVersionGCP ]; then
            echo "COA and GCP current versions are not equal; this should not happen. Exiting"
            exit 1
          fi

          if [ $nextVersionCOA != $nextVersionGCP ]; then
            echo "COA and GCP next versions are not equal; this should not happen. Exiting"
            exit 1
          fi

          echo "OLD_CROMWELL_HELM_V=$currentVersionGCP" >> $GITHUB_ENV
          echo "NEW_CROMWELL_HELM_V=$nextVersionGCP" >> $GITHUB_ENV

      - name: Clone leonardo
        uses: actions/checkout@v2
        with:
          repository: broadinstitute/leonardo
          token: ${{ secrets.BROADBOT_TOKEN }} # Has to be set at checkout AND later when pushing to work
          path: leonardo
      - name: Update & push to leonardo
        id: update-and-push
        env:
          BROADBOT_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
        run: |
          cd leonardo
          NEW_BRANCH_NAME="cromwell_helm_${NEW_CROMWELL_HELM_V}"
          TEMP=$(mktemp)
          git checkout -b "${NEW_BRANCH_NAME}"
          SED_STRING="s/${OLD_CROMWELL_HELM_V}/${NEW_CROMWELL_HELM_V}/g"
          FILES=( "Dockerfile" "http/src/main/resources/reference.conf" )
          for i in "${FILES[@]}"
          do
            echo "Updating ${i}"
            sed "${SED_STRING}" ${i} > ${TEMP}
            mv ${TEMP} ${i}
            git add ${i}
          done
          echo "Pushing to leonardo branch ${NEW_BRANCH_NAME}"
          git config --global user.name "broadbot"
          git config --global user.email "broadbot@broadinstitute.org"
          git commit -m "Updating Cromwell version to ${NEW_CROMWELL_HELM_V}"
          git push https://broadbot:$BROADBOT_TOKEN@github.com/broadinstitute/leonardo.git ${NEW_BRANCH_NAME}
          echo ::set-output name=NEW_BRANCH_NAME::${NEW_BRANCH_NAME}
      - name: Create leonardo PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BROADBOT_TOKEN }}
          script: |
            const result = await github.rest.pulls.create({
              title: '[AUTOMERGE] Update Cromwell version to ${NEW_CROMWELL_HELM_V}',
              owner: 'broadinstitute',
              repo: 'leonardo',
              head: '${{ steps.update-and-push.outputs.NEW_BRANCH_NAME }}',
              base: 'develop',
              body: [
                'This PR is auto-generated by',
                '[Cromwhelm actions/make_leo_pr](https://github.com/broadinstitute/cromwhelm/blob/main/.github/workflows/make_leo_pr.yml), using',
                '[github actions/github-script](https://github.com/actions/github-script).',
                '',
                'It updates cromwell-helm from version ${OLD_CROMWELL_HELM_V} to ${NEW_CROMWELL_HELM_V}.'
              ].join('\n')
            });

