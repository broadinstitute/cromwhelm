apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "app.labels" . | nindent 4 }}
  name: {{ include "app.fullname" . }}-tes-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: tes
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: tes
        aadpodidbinding: {{ .Values.identity.name }}
    spec:
      containers:
        - env:
            # Name needs to be unique per LZ
            - name: Name
              value: {{ .Values.fullnameOverride }}
            - name: ApplicationInsights_Connection_String
              value: {{ .Values.config.applicationInsightsAccountKey }}
            - name: AzureOfferDurableId
              value: {{ .Values.config.azureOfferDurableId }}
            - name: BatchAccount__AccountName
              value: {{ .Values.config.batchAccountName }}
            - name: BatchAccount__BaseUrl
              value: "https://{{ .Values.config.batchAccountName }}.{{ .Values.config.region }}.batch.azure.com"
            - name: BatchAccount__AppKey
              value: {{ .Values.config.batchAccountKey }}
            - name: BatchAccount__Region
              value: {{ .Values.config.region }}
            - name: BatchAccount__SubscriptionId
              value: {{ .Values.config.subscriptionId }}
            - name: BatchAccount__ResourceGroup
              value: {{ .Values.config.resourceGroup }}
            # Not currently working
            # - name: BatchNodesSubnetId
            #   value: {{ .Values.config.batchNodesSubnetId }}
            - name: RetryPolicyOptions__MaxRetryCount
              value: "5"
            - name: RetryPolicyOptions__ExponentialBackOffExponent
              value: "2"
            - name: ContainerRegistry__AutoDiscoveryEnabled
              value: "false"
            - name: ContainerRegistry__RegistryInfoCacheExpirationInHour
              value: "1"
            - name: Terra__LandingZoneId
              value: {{ .Values.config.landingZoneId }}
            - name: Terra__LandingZoneApiHost
              value: {{ .Values.persistence.workspaceManager.url }}
            - name: Terra__SasTokenExpirationInSeconds
              value: "{{ .Values.tes.sasTokenExpirationInSeconds }}"
            - name: Terra__WsmApiHost
              value: {{ .Values.persistence.workspaceManager.url }}
            - name: Terra__WorkspaceStorageContainerResourceId
              value: {{ .Values.persistence.workspaceManager.containerResourceId }}
            - name: Terra__WorkspaceStorageContainerName
              value: {{ .Values.persistence.blobContainer }}
            - name: Terra__WorkspaceStorageAccountName
              value: {{ .Values.persistence.storageAccount }}
            - name: Terra__WorkspaceId
              value: {{ .Values.persistence.workspaceManager.workspaceId }}
            - name: BlobxferImageName
              value: {{ .Values.config.blobxferImageName }}
            - name: DisableBatchNodesPublicIpAddress
              value: {{ .Values.config.disableBatchNodesPublicIpAddress | quote }}
            - name: DisableBatchScheduling
              value: {{ .Values.config.disableBatchScheduling | quote }}
            - name: DockerInDockerImageName
              value: {{ .Values.config.dockerInDockerImageName }}
            - name: UsePreemptibleVmsOnly
              value: {{ .Values.config.usePreemptibleVmsOnly | quote}}
            - name: MarthaUrl
              value: {{ .Values.config.drsUrl }}
            - name: CromwellDrsLocalizerImageName
              value: {{ .Values.cromwell.image | replace "cromwell" "cromwell-drs-localizer" }}
            - name: UseLegacyBatchImplementationWithAutopools
              value: "false"
            - name: TesPostgreSql__PostgreSqlServerName
              value: {{ include "app.fullname" . }}
            - name: TesPostgreSql__PostgreSqlServerNameSuffix
              value: "-postgres"
            - name: TesPostgreSql__PostgreSqlServerSslMode
              value: Disable
            - name: TesPostgreSql__PostgreSqlServerPort
              value: "{{ .Values.postgres.port }}"
            - name: TesPostgreSql__PostgreSqlDatabaseName
              value: {{ .Values.postgres.tes.dbname }}
            - name: TesPostgreSql__PostgreSqlDatabaseUserLogin
              value: {{ .Values.postgres.user | quote }}
            - name: TesPostgreSql__PostgreSqlDatabaseUserPassword
              value: {{ include "dbPassword" . | b64enc | quote }}
            - name: Logging__LogLevel__Default
              value: {{ .Values.tes.logLevel }}
            - name: AllowedHosts
              value: "*"
            - name: BatchImagePublisher
              value: "microsoft-dsvm"
            - name: BatchImageOffer
              value: "ubuntu-hpc"
            - name: BatchImageSku
              value: "2004"
            - name: BatchImageVersion
              value: "latest"
            - name: BatchNodeAgentSkuId
              value: "batch.node.ubuntu 20.04"
            - name: Gen2BatchNodeAgentSkuId
              value: "batch.node.ubuntu 20.04"
            - name: Gen2BatchImageOffer
              value: "ubuntu-hpc"
            - name: Gen2BatchImagePublisher
              value: "microsoft-dsvm"
            - name: Gen2BatchImageSku
              value: "2004"
            - name: Gen2BatchImageVersion
              value: "latest"
            - name: Gen1BatchImageOffer
              value: "ubuntu-server-container"
            - name: Gen1BatchImagePublisher
              value: "microsoft-azure-batch"
            - name: Gen1BatchImageSku
              value: "20-04-lts"
            - name: Gen1BatchImageVersion
              value: "latest"
            - name: BatchPoolRotationForcedDays
              value: "7"
          image: {{ .Values.tes.image }}
          name: tes
          ports:
            - containerPort: {{ .Values.tes.port }}
          resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "app.labels" . | nindent 4 }}
  name: {{ include "app.fullname" . }}-tes-svc
spec:
  ports:
    - name: {{ .Values.tes.port | quote }}
      port: {{ .Values.tes.port }}
      targetPort: {{ .Values.tes.port }}
  selector:
    io.kompose.service: tes
status:
  loadBalancer: {}
