{{ include "terra-batch-libchart.cromwell-deploy" (list . "coa-helm.cromwell-deploy") }}
{{ define "coa-helm.cromwell-deploy" }}
spec:
  template:
    spec:
      containers:
        - args:
            - java -Djava.io.tmpdir=/cromwell-tmp/ -Dconfig.file=/configuration/cromwell/cromwell-application.conf -jar /app/cromwell.jar server
          command:
            - /bin/sh
            - -c
          image: {{ .Values.cromwell.image }}
          name: cromwell
          stdin: true
          tty: true
          ports:
            - containerPort: {{ .Values.cromwell.port }}
          resources: {}
          volumeMounts:
            - mountPath: /cromwell-tmp
              name: cromwell-tmp-claim
            - mountPath: /configuration
              name: configuration-claim1
            - mountPath: /cromwell-executions
              name: cromwell-executions-claim1
            - mountPath: /cromwell-workflow-logs
              name: cromwell-workflow-logs-claim1
            - mountPath: /workflows
              name: workflows-claim1
            - mountPath: /inputs
              name: inputs-claim1
            - mountPath: /outputs
              name: outputs-claim1
            - mountPath: /configuration/cromwell
              name: cromwell-config-volume
      restartPolicy: Always
      volumes:
        - name: cromwell-tmp-claim
          persistentVolumeClaim:
            claimName: cromwell-tmp-claim
        - name: configuration-claim1
          persistentVolumeClaim:
            claimName: configuration-claim1
        - name: cromwell-executions-claim1
          persistentVolumeClaim:
            claimName: cromwell-executions-claim1
        - name: cromwell-workflow-logs-claim1
          persistentVolumeClaim:
            claimName: cromwell-workflow-logs-claim1
        - name: workflows-claim1
          persistentVolumeClaim:
            claimName: workflows-claim1
        - name: inputs-claim1
          persistentVolumeClaim:
            claimName: inputs-claim1
        - name: outputs-claim1
          persistentVolumeClaim:
            claimName: outputs-claim1
        - name: cromwell-config-volume
          configMap:
            name: {{ include "app.fullname" . }}-cromwell-config
status: {}
{{ end }}

---

{{ include "terra-batch-libchart.cromwell-service" (list . "coa-helm.cromwell-service") }}
{{ define "coa-helm.cromwell-service" }}
status:
  loadBalancer: {}
{{ end }}

---

{{ include "terra-batch-libchart.cromwell-config" (list . "coa-helm.cromwell-config") }}
{{ define "coa-helm.cromwell-config" }}
data:
  cromwell-application.conf: |-
    include required(classpath("application"))

    akka.http.host-connection-pool.pool-implementation = legacy

    call-caching {
      enabled = false
    }

    system {
      input-read-limits {
        lines = 1000000
      }
    }

    engine {
      filesystems {
        local {
          enabled: true
        }
        http {
          enabled: true
        }
      }
    }

    workflow-options {
      workflow-log-dir: "/cromwell-workflow-logs"
      workflow-log-temporary: false
    }

    backend {
      default = "TES"
      providers {
        TES {
          actor-factory = "cromwell.backend.impl.tes.TesBackendLifecycleActorFactory"
          config {
            filesystems {
              http { }
            }
            root = "/cromwell-executions"
            dockerRoot = "/cromwell-executions"
            endpoint = "http://tes/v1/tasks"
            use_tes_11_preview_backend_parameters = true
            default-runtime-attributes {
              cpu: 1
              failOnStderr: false
              continueOnReturnCode: 0
              memory: "2 GB"
              disk: "10 GB"
              preemptible: true
            }
          }
        }
      }
    }

{{ include "cromwell-application.database.conf" . | indent 4 }}
{{ end }}
