{{- if .Values.cbas.enabled }}
{{ include "terra-batch-libchart.cbas-api-deploy" (list . "coa-helm.cbas-api-deploy") }}
{{ end }}
{{ define "coa-helm.cbas-api-deploy" }}
# Overrides go here
spec:
  template:
    spec:
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: "kubernetes.azure.com/scalesetpriority"
                operator: In
                values:
                - "spot"
    metadata:
      annotations:
        checksum/config: {{ include ("coa-helm.cbas-api-config") . | sha256sum }}
      labels:
  {{ include "coa-helm.labels" $ | nindent 8 }}
    spec:
      {{- if .Values.workloadIdentity.enabled }}
      serviceAccountName: {{ .Values.workloadIdentity.serviceAccountName }}
      {{ end }}
{{ end }}

---
{{- if .Values.cbas.enabled }}
{{ include "terra-batch-libchart.cbas-api-service" (list . "coa-helm.cbas-api-service") }}
{{ end }}
{{ define "coa-helm.cbas-api-service" }}
# Overrides go here
{{ end }}

---
{{- if .Values.cbas.enabled }}
{{ include "terra-batch-libchart.cbas-api-config" (list . "coa-helm.cbas-api-config") }}
{{ end }}
{{ define "coa-helm.cbas-api-config" }}
# Overrides go here
data:
  {{ .Values.cbas.conf_file }}: |-
    spring:
      datasource:
        {{- if eq ("true") (include "podLocalDatabaseEnabledForCromwellCBAS" .) }}
        jdbc-url: jdbc:postgresql://{{ include "app.fullname" . }}-postgres:{{ include "postgresPort" . }}/{{ .Values.postgres.dbnames.cbas }}
        password: {{ include "dbPassword" . | b64enc | quote }}
        {{- else }}
        jdbc-url: "jdbc:postgresql://{{ .Values.postgres.host }}:{{ include "postgresPort" . }}/{{ .Values.postgres.dbnames.cbas }}?sslMode=Require&authenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin"
        {{- end }}
        username: {{ .Values.postgres.user }}
      sql:
        init:
          mode: always
      liquibase:
        {{- if eq ("true") (include "podLocalDatabaseEnabledForCromwellCBAS" .) }}
        url: jdbc:postgresql://{{ include "app.fullname" . }}-postgres:{{ include "postgresPort" . }}/{{ .Values.postgres.dbnames.cbas }}
        password: {{ include "dbPassword" . | b64enc | quote }}
        {{- else }}
        url: "jdbc:postgresql://{{ .Values.postgres.host }}:{{ include "postgresPort" . }}/{{ .Values.postgres.dbnames.cbas }}?sslMode=Require&authenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin"
        {{- end }}
        user: {{ .Values.postgres.user }}
        change-log: changelog/changelog.yaml
    cbas:
      cbas-database:
        {{- if eq ("true") (include "podLocalDatabaseEnabledForCromwellCBAS" .) }}
        uri: jdbc:postgresql://{{ include "app.fullname" . }}-postgres:{{ include "postgresPort" . }}/{{ .Values.postgres.dbnames.cbas }}
        password: {{ include "dbPassword" . | b64enc | quote }}
        {{- else }}
        uri: "jdbc:postgresql://{{ .Values.postgres.host }}:{{ include "postgresPort" . }}/{{ .Values.postgres.dbnames.cbas }}?sslMode=Require&authenticationPluginClassName=com.azure.identity.extensions.jdbc.postgresql.AzurePostgresqlAuthenticationPlugin"
        {{- end }}
        username: {{ .Values.postgres.user }}
    workflow-engines:
      cromwell:
        baseUri: 'http://{{ include "app.fullname" . }}-cromwell-svc:8000'
        finalWorkflowLogDir: "https://{{ .Values.persistence.storageAccount }}.blob.core.windows.net/{{ .Values.persistence.blobContainer }}/workspace-services/cbas/{{ .Values.persistence.leoAppInstanceName }}/cromwell-workflow-logs"
    wds:
      instanceId: "{{ .Values.persistence.workspaceManager.workspaceId }}"
      apiV: "v0.2"
    leonardo:
      baseUri: "{{ .Values.leonardo.url }}"
      wdsAppTypeNames: ['WDS', 'CROMWELL']
      cromwellRunnerAppTypeNames: ['CROMWELL_RUNNER_APP', 'CROMWELL']
      dependencyUrlCacheTtlSeconds: 300
    credentials:
      azure:
        tokenAcquisitionTimeoutSeconds: 5
        tokenCacheTtlSeconds: 300
    terra.common:
      tracing:
        stackdriverExportEnabled: false
    dockstore:
      baseUri: "{{ .Values.dockstore.baseUrl}}"
    sam:
      baseUri: "{{ .Values.sam.url}}"
      workspaceId: "{{ .Values.persistence.workspaceManager.workspaceId }}"
{{ end }}
