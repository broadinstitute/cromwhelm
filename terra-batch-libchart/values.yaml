exports:
  common:
    cromwell:
      name: coa-cromwell-svc
      image: broadinstitute/cromwell:86-9a14054
      port: 8000
      enabled: true

    proxy:
      image: nginx:latest
      port: 8000
      type: ClusterIP
      conf_dir: /etc/nginx
      conf_file: nginx.conf
      www_dir: /www/data
      www_file: index.html

    # Note: If you change the location of cbas-ui image config, please also update publish.yml in cbas-ui
    #       repo as the GitHub workflow looks in this file to automatically update the image version
    cbasUI:
      name: cbas-ui
      image: us.gcr.io/broad-dsp-gcr-public/cbas-ui:0.0.156
      conf_file: config.json
      conf_dir: /usr/share/nginx/html
      enabled: true

    # Note: If you change the location of cbas image config, please also update publish.yml in cbas
    #       repo as the GitHub workflow looks in this file to automatically update the image version
    cbas:
      name: cbas
      image: us.gcr.io/broad-dsp-gcr-public/cbas:0.0.144
      conf_dir: /etc/conf
      conf_file: cbas.yaml
      enabled: true

    config:
      resourceGroup: "UNDEFINED"

    provenance:
      sourceWorkspaceId: ""
      userAccessToken: "UNDEFINED"

    persistence:
      storageAccount: "UNDEFINED"
      blobContainer: "UNDEFINED"
      leoAppInstanceName: "UNDEFINED"
      workspaceManager:
        url: "UNDEFINED"
        workspaceId: "UNDEFINED"
        containerResourceId: "UNDEFINED"

    sam:
      url: "UNDEFINED"

    leonardo:
      url: "UNDEFINED"

    postgres:
      # Note that podLocalDatabaseEnabled=false is only currently supported by 
      # coa-helm (Azure), NOT cromwell-helm (GCP)
      podLocalDatabaseEnabled: true

      host: RUNTIME_PARAMETER # ignored if podLocalDatabaseEnabled is true
      port: 5432
      user: postgres_user
      dbnames:
        cromwell: cromwell
        cbas: cbas
        tes: tes

      # If podLocalDatabaseEnabled is false, then the app will connect to external Postgres databases and
      # the following fields will be ignored
      image: postgres:15.2
      password: "RUNTIME_PARAMETER"
      startup_dir: /docker-entrypoint-initdb.d
      startup_scripts: # Numbered because the scripts in initdb.d are run in alphabetical order
        create_dbs: 01_create_dbs.sh

    env:
      swaggerBasePath: "SUPPLIED BY LEO"

    dockstore:
      baseUrl: "SUPPLIED BY LEO"
