{{- if .Values.cromwell.enabled }}
{{ include "terra-batch-libchart.cromwell-deploy" (list . "cromwell-helm.cromwell-deploy") }}
{{ end }}
{{ define "cromwell-helm.cromwell-deploy" }}
# Overrides go here
spec:
  template:
    metadata:
      annotations:
        checksum/config: {{ include ("cromwell-helm.cromwell-config") . | sha256sum }}
        checksum/dbconfig: {{ include ("terra-batch-libchart.cromwell-config.database.conf") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Values.config.serviceAccount.name }}
      volumes:
        - name: {{ include "app.fullname" . }}-storage
          persistentVolumeClaim:
            claimName: {{ include "app.fullname" . }}-postgres-pvc
        - name: {{ include "app.fullname" . }}-cromwell-config
          configMap:
            name: {{ include "app.fullname" . }}-cromwell-config
            items:
              - key: {{ .Values.cromwell.config.file }}
                path: {{ .Values.cromwell.config.file }}
      containers:
        - name: {{ .Chart.Name }}-container
          # Keep this format stable for automatic version bumps from https://github.com/broadinstitute/cromwell/pull/6739
          image: {{ .Values.cromwell.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: {{ include "app.fullname" . }}-cromwell-config
              mountPath: {{ .Values.cromwell.config.dir }}/{{ .Values.cromwell.config.file }}
              subPath: {{ .Values.cromwell.config.file }}
          env:
            - name: SWAGGER_BASE_PATH
              value: "{{ .Values.env.swaggerBasePath }}"
          {{- if .Values.autopilot.enabled }}
          {{- with .Values.autopilot.app }}
          resources:
            requests:
              {{- toYaml . | nindent 14 }}
            limits:
              {{- toYaml . | nindent 14 }}
          {{- end }}
          {{- end }}
          command:
            - "bin/bash"
            - "-c"
            - >-
             java
             -Ddatabase.db.port="{{ .Values.postgres.port }}"
             -Ddatabase.db.connectionTimeout=5000
             -Dconfig.file={{ .Values.cromwell.config.dir }}/{{ .Values.cromwell.config.file }}
             -jar /app/cromwell.jar
             server
{{ end }}

---

{{- if .Values.cromwell.enabled }}
{{ include "terra-batch-libchart.cromwell-service" (list . "cromwell-helm.cromwell-service") }}
{{ end }}
{{ define "cromwell-helm.cromwell-service" }}
{{ end }}

---

{{- if .Values.cromwell.enabled }}
{{ include "terra-batch-libchart.cromwell-config" (list . "cromwell-helm.cromwell-config") }}
{{ end }}
{{ define "cromwell-helm.cromwell-config" }}
data:
  {{ .Values.cromwell.config.file }}: |-
    include required(classpath("application"))
    system {
      max-concurrent-workflows = 10000
      new-workflow-poll-rate = 10
      max-workflow-launch-count = 30
      max-scatter-width-per-scatter = 35000
      total-max-jobs-per-root-workflow = 200000
      job-rate-control {
        jobs = 20
        per = 5 seconds
      }
      job-restart-check-rate-control {
        jobs = 30
        per = 1 seconds
      }
    }
    
    call-caching {
      enabled = true
      invalidate-bad-cache-results = true
    }

    google {

      application-name = "cromwell"

      auths = [
        {
          name = "application-default"
          scheme = "application_default"
        }
      ]
    }

    engine {
      filesystems {
        gcs {
          // Will be used if the wdl interacts with files outside of the context of a backend.
          auth = "application-default"
          project = "{{ .Values.config.gcsProject }}"
        }
      }
    }

    backend {
      default = "PAPIv2"
      providers {
        PAPIv2 {
          actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
          config {
            // Google project
            project = "{{ .Values.config.gcsProject }}"

            // Base bucket for workflow executions
            root = "{{ .Values.config.gcsBucket }}"

            // Polling for completion backs-off gradually for slower-running jobs.
            // This is the maximum polling interval (in seconds):
            maximum-polling-interval = 600

            // Optional Dockerhub Credentials. Can be used to access private docker images.
            dockerhub {
              // account = ""
              // token = ""
            }

            genomics {
              // A reference to an auth defined in the `google` stanza at the top.  This auth is used to create
              // Pipelines and manipulate auth JSONs.
              auth = "application-default"
              // Endpoint for API (dependent on 'location')
              endpoint-url = "{{ .Values.config.papiv2EndpointUrl }}"
              // Will get overridden by email address provided in workflow options, "google_compute_service_account"
              compute-service-account = "{{ .Values.config.serviceAccount.annotations.gcpServiceAccount }}"

              // Pipelines v2 only: specify the number of times localization and delocalization operations should be attempted
              // There is no logic to determine if the error was transient or not, everything is retried upon failure
              // Defaults to 3
              localization-attempts = 3

              // Starting from version 2 beta of the Google Life Sciences API, this is a required attribute for creating pipelines.
              location = "{{ .Values.config.gcsRegion }}"

               // Restrict access to VM metadata. Useful in cases when untrusted containers are running under a service
               // account not owned by the submitting user
               restrict-metadata-access = false
            }

            filesystems {
              gcs {
                // A reference to a potentially different auth for manipulating files via engine functions.
                auth = "application-default"
                project = "{{ .Values.config.gcsProject }}"
              }
            }

            virtual-private-cloud {
              network-label-key = "vpc-network-name"
              subnetwork-label-key = "vpc-subnetwork-name"
              auth = "application-default"
            }
          }
        }
      }
    }

{{ include "terra-batch-libchart.cromwell-config.database.conf" . | indent 4 }}
{{ end }}
